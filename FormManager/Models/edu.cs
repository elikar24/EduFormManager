//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Text;

namespace EduFormManager.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class edu{
        public edu()
        {
            this.edu_form_data = new HashSet<edu_form_data>();
            this.messages = new HashSet<message>();
            this.management_agency = new HashSet<management_agency>();
            this.management_agency_activity = new HashSet<management_agency_activity>();
            this.activity_type = new HashSet<activity_type>();
        }
    
        public int edu_id { get; set; }
        [Description("Наименование")]
        public string fullname { get; set; }
        [Description("Краткое наименование")]
        public string name { get; set; }
        [Description("Оператор")]
        public string @operator { get; set; }
        public int municipality_id { get; set; }
        public Nullable<int> edu_kind_id { get; set; }
        public Nullable<int> status_id { get; set; }
        [Description("Код")]
        public string code { get; set; }
        [Description("Код ОКПО")]
        public string okpo_code { get; set; }
        [Description("Дата выдачи лицензии")]
        public System.DateTime license_date { get; set; }
        [Description("Кем выдана лицензия")]
        public string license_from { get; set; }
        [Description("Дата аккредитации")]
        public System.DateTime accreditation_date { get; set; }
        [Description("Кем выдана аккредитация")]
        public string accreditation_from { get; set; }
        public Nullable<int> ownership_type_id { get; set; }
        public Nullable<int> edu_type_id { get; set; }
        [Description("Малокомплектное учреждение")]
        public bool is_ungraded { get; set; }
        [Description("Директор")]
        public string director { get; set; }
        [Description("Почтовый адрес")]
        public string post { get; set; }
        [Description("Телефон")]
        public string phone { get; set; }
        [Description("Электронный почтовый адрес")]
        public string email { get; set; }
        [Description("Сайт в интернете")]
        public string link { get; set; }
        [Description("Количество филиалов")]
        public int branch_num { get; set; }
        [Description("Орган государственно-общественного управления обладает полномочиями...")]
        public bool management_agency_has_authority { get; set; }
        [Description("Номер аккредитации")]
        public string accreditation_num { get; set; }
        [Description("Номер лицензии")]
        public string license_num { get; set; }
        [Description("Аккредитация действительна до")]
        public System.DateTime accreditation_end_date { get; set; }
        public System.DateTime license_end_date { get; set; }
    
    	public override string ToString() { return this.name; }
    
        [Description("Тип")]
        public virtual edu_type edu_type { get; set; }
        [Description("Муниципалитет")]
        public virtual municipality municipality { get; set; }
        [Description("Форма собственности")]
        public virtual ownership_type ownership_type { get; set; }
        [Description("Статус")]
        public virtual edu_status edu_status { get; set; }
        public virtual ICollection<edu_form_data> edu_form_data { get; set; }
        [Description("Вид")]
        public virtual edu_kind edu_kind { get; set; }
        public virtual ICollection<message> messages { get; set; }
        [Description("Органы государственно-общественного управления")]
        public virtual ICollection<management_agency> management_agency { get; set; }
        [Description("Виды деятельности органов государственно-общественного управления")]
        public virtual ICollection<management_agency_activity> management_agency_activity { get; set; }
        [Description("Виды деятельности")]
        public virtual ICollection<activity_type> activity_type { get; set; }

        public virtual bool ContainsText(string text)
        {
            string queryText = text.Trim().ToLower();
            if (string.IsNullOrEmpty(queryText))
                return true;
            string[] queryTextParts = queryText.Split(' ');
            PropertyInfo[] props = this.GetType().GetProperties();
            return props.Select(propertyInfo => propertyInfo.GetValue(this)).OfType<string>()
                .Where(strValue => !string.IsNullOrEmpty(strValue))
                .Any(strValue => queryTextParts.Any(query => strValue.Trim().ToLower().Contains(query)));
        }

        public virtual string ToStringFull()
        {
            StringBuilder stringBuilder = new StringBuilder();
            string[] nameParts = this.name.Split(' ');
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Наименование", ""));
            for (int i = 0; i < nameParts.Length; i++)
            {
                stringBuilder.Append(nameParts[i]).Append(" ");
                if (i != 0 && i % 3 == 0)
                    stringBuilder.AppendLine(" ");
            }
            stringBuilder.AppendLine();
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Сокр. наименование", this.name));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Номер аккредитации", this.accreditation_num));
            stringBuilder.AppendLine(string.Format("• {0}: {1:dd MMMM yyyy}", "Дата", this.accreditation_date));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Кем выдана", this.accreditation_from));

            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Номер лицензии", this.license_num));
            stringBuilder.AppendLine(string.Format("• {0}: {1:dd MMMM yyyy}", "Дата", this.license_date));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Кем выдана", this.license_from));

            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Вид учреждения", this.edu_kind));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Код ОКПО", this.okpo_code));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Код учреждения", this.code));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Телефон", this.phone));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "e-mail", this.email));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Сайт", this.link));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Почта", this.post));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Статус", this.edu_status));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Тип", this.edu_type));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Директор", this.director));
            stringBuilder.AppendLine(string.Format("• {0}: {1}", "Число филиалов", this.branch_num));

            return stringBuilder.ToString();
        }
    }
}
